spring.application.name=steam-twitch-integration

# path to config file with api keys
# to run app without keys you have to define api.client_id and api.client_secret
# both can be obtained in twitch developer console
# also added other properties
spring.config.import=optional:classpath:application-secret.properties

api.client_id=${CLIENT_ID:1}
api.client_secret=${CLIENT_SECRET:1}

# url for testing in ram with h2 db
# spring.datasource.url=jdbc:h2:mem:integration_db
# url for postgres db in docker container

# only db
# docker run --name db -e POSTGRES_PASSWORD=integration -e POSTGRES_DB=integration_db -e POSTGRES_USER=integration -p 5432:5432 -d postgres

#spring.datasource.url=jdbc:postgresql://db:5432/integration_db
#spring.datasource.url=jdbc:postgresql://localhost:5432/integration_db
spring.datasource.url=jdbc:postgresql://${DB_URL:localhost}:5432/${POSTGRES_DB:integration_db}
spring.datasource.username=integration
spring.datasource.password=integration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#spring.jpa.defer-datasource-initialization=true

# create clears all data after running application second time
#spring.jpa.hibernate.ddl-auto=create
# data is still before runs
spring.jpa.hibernate.ddl-auto=update
# for inserting data from sql file
#spring.jpa.hibernate.ddl-auto=validate

# set to always to generate data from old_data.sql and old_schema.sql
#spring.sql.init.mode=never
spring.jpa.show-sql=false

# only for h2
# spring.datasource.driverClassName=org.h2.Driver
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# spring.h2.console.enabled=true
